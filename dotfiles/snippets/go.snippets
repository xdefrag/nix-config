snippet err "handle error and return"
if err != nil {
	return err
}

${0}
endsnippet

snippet jdec "json decode"
var j json.RawMessage

if err := json.NewDecoder(${1:r.Body}).Decode(&j); err != nil {
	return err
}

${0}
endsnippet

snippet rma "Run pattern of Main"
func main() {
	if err := run(os.Args, os.Stdout); err != nil {
		fmt.Fprintf(os.Stderr, "%s\n", err)
		os.Exit(1)
	}
}

func run(args []string, stdout io.Writer) error {
	${0}

	return nil
}
endsnippet

snippet ggm "Go generate interface's mocks"
//go:generate mockgen -package ${1:main_test} -destination ${2:./main_mock_test.go} ${3:io} ${4:Reader,Writer}
endsnippet

snippet ct "Set Content-Type to Request"
req.Header.Set("Content-Type", "${1:application/json}")

${0}
endsnippet

snippet mr "Mocked Response"
var ${1:response} = &http.Response{
	Body: ioutil.NopCloser(strings.NewReader(
		${2:body}
	)),
}

${0}
endsnippet
